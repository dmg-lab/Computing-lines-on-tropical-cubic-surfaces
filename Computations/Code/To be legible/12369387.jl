#ID: 12369387

# Secondary Cone
SecEq = [1 0 0 0 -1 0 0 0 0 0 -1 0 0 1 0 0 0 0 0 0;
0 0 1 0 0 -1 0 0 0 0 0 -1 0 1 0 0 0 0 0 0;
0 1 0 0 0 -1 0 0 0 0 0 -1 0 0 1 0 0 0 0 0;
0 -1 0 0 0 1 0 0 0 0 1 0 0 -1 0 0 0 0 0 0;
0 -1 0 0 1 0 0 0 0 0 0 1 0 -1 0 0 0 0 0 0;
0 1 0 0 -1 -1 0 1 0 0 0 0 0 0 0 0 0 0 0 0;
0 1 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0;
0 0 0 1 0 0 -1 0 0 0 0 0 -1 0 1 0 0 0 0 0;
0 0 -1 0 0 0 1 0 0 0 0 1 0 0 -1 0 0 0 0 0;
0 0 -1 0 0 1 0 0 0 0 0 0 1 0 -1 0 0 0 0 0;
0 0 1 0 0 -1 -1 0 1 0 0 0 0 0 0 0 0 0 0 0;
0 0 1 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0;
0 0 0 0 1 0 0 -1 0 0 0 0 0 -1 0 1 0 0 0 0;
0 0 0 0 0 0 1 0 -1 0 0 0 0 0 -1 1 0 0 0 0;
0 0 0 0 0 -1 0 0 1 0 0 0 0 1 0 -1 0 0 0 0;
0 0 0 0 0 -1 0 1 0 0 0 0 0 0 1 -1 0 0 0 0;
0 0 0 0 0 1 0 -1 -1 1 0 0 0 0 0 0 0 0 0 0;
0 0 0 0 0 0 0 0 0 0 0 1 0 -1 -1 1 0 0 0 0;
0 0 0 0 0 1 0 0 0 0 0 0 0 -1 -1 0 0 0 1 0;
0 0 0 0 0 0 0 0 0 0 1 0 0 -1 0 0 -1 0 1 0;
0 0 0 0 0 0 0 0 0 0 0 0 1 0 -1 0 0 -1 1 0;
0 0 0 0 0 0 0 0 0 0 0 -1 0 0 1 0 1 0 -1 0;
0 0 0 0 0 0 0 0 0 0 0 -1 0 1 0 0 0 1 -1 0;
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 -1 -1 0 1]

SecCone = pm.polytope.Cone(INEQUALITIES=SecEq)
FSecCone = Matrix{Int64}(SecCone.FACETS)*Vars

# Motifs
MotA = [[[2 6 11 14 13 18],[1 0 2 3]],[[15 7 14 5 2 11],[3 1 0 2]],[[18 16 14 11 2 5],[3 2 0 1]],[[15 8 13 5 1 11],[0 1 3 2]],[[2 12 5 14 13 15],[2 0 1 3]],[[1 10 5 13 14 15],[2 3 1 0]],[[18 17 13 11 1 5],[0 2 3 1]],[[1 4 11 13 14 18],[1 3 2 0]]]
MotB = [[[6 14 5 11 13 10],[0 1 2 3]],[[6 14 5 11 13 16],[0 1 2 3]],[[8 14 5 11 13 10],[0 1 2 3]],[[8 14 5 11 13 16],[0 1 2 3]],[[12 14 11 5 13 4],[0 2 1 3]],[[12 14 11 5 13 7],[0 2 1 3]],[[17 14 11 5 13 4],[0 2 1 3]],[[17 14 11 5 13 7],[0 2 1 3]],[[15 14 13 11 5 1],[0 3 2 1]],[[15 14 13 11 5 2],[0 3 2 1]],[[18 14 13 11 5 1],[0 3 2 1]],[[18 14 13 11 5 2],[0 3 2 1]]]
MotC = []
MotD = [[[6 14 2 5 1 4 13],[2 0 1 3]],[[14 18 11 13 10 1 4],[2 0 3 1]],[[14 15 5 13 4 1 10],[1 0 3 2]],[[12 14 2 11 1 10 13],[1 0 2 3]],[[4 13 1 5 2 6 14],[2 3 1 0]],[[13 15 5 14 6 2 12],[1 3 0 2]],[[13 18 11 14 12 2 6],[2 3 0 1]],[[10 13 1 11 2 12 14],[1 3 2 0]],[[1 11 13 5 7 8 15],[3 2 1 0]],[[2 11 14 5 8 7 15],[0 2 1 3]],[[11 16 18 13 15 5 7],[0 2 3 1]],[[11 17 18 14 15 5 8],[3 2 0 1]],[[5 7 15 13 18 11 16],[0 1 3 2]],[[5 8 15 14 18 11 17],[3 1 0 2]],[[1 5 13 11 16 17 18],[3 1 2 0]],[[2 5 14 11 17 16 18],[0 1 2 3]]]
MotE = [[[6 5 14 13 15 2 11],[0 1 3 2]],[[8 5 14 13 15 2 11],[0 1 3 2]],[[12 11 14 13 18 2 5],[0 2 3 1]],[[17 11 14 13 18 2 5],[0 2 3 1]],[[4 5 13 14 15 1 11],[1 3 0 2]],[[7 5 13 14 15 1 11],[1 3 0 2]],[[10 11 13 14 18 1 5],[2 3 0 1]],[[16 11 13 14 18 1 5],[2 3 0 1]]]
MotH = []
MotJ = []

for Mot in MotA
	println("MotifA: ", Mot[1])
	SchlaefliA(Mot)
end
for Mot in MotB 
	println("MotifB: ", Mot[1])
	SchlaefliB(Mot)
end
for Mot in MotC
	println("MotifC: ", Mot[1])
	SchlaefliC(Mot)
end
for Mot in MotD 
	println("MotifD: ", Mot[1])
	SchlaefliD(Mot)
end
for Mot in MotE 
	println("MotifE: ", Mot[1])
	SchlaefliE(Mot)
end
for Mot in MotH
	println("MotifH: ", Mot[1])
	SchlaefliH(Mot)
end
for Mot in MotJ 
	println("MotifJ: ", Mot[1])
	SchlaefliJ(Mot)
end

